<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
  <groupId>com.vlms</groupId>
  <artifactId>VLMS_Stock_API</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>VLMS_Stock_API</name>
  <description>VLMS Stock API</description>
  <url>http://facebook.com/vlmskdp</url>
    <properties>
        <java.version>17</java.version>
    </properties>
  <dependencies>
<!--    // we'll use this dependency to create RESTful API endpoints,-->
<!--    // handle HTTP requests (GET, POST, PUT, DELETE), and return JSON responses.-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

<!--    // we'll use this dependency to interact with a database,-->
<!--    // define JPA entities (data models), perform CRUD operations,-->
<!--    // and execute custom database queries.-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

<!--    // we'll use this dependency to establish a connection to-->
<!--    // our MySQL database, execute SQL queries, and manage database transactions.-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.33</version>
      <scope>runtime</scope>
    </dependency>

<!--    // we'll use Lombok annotations (such as @Data, @Getter, @Setter)-->
<!--    // in our Java classes to automatically generate common methods,-->
<!--    // making your code cleaner and more concise.-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

<!--    // we'll use this dependency to annotate your Java model classes-->
<!--    // with validation constraints (e.g., @NotBlank, @NotNull, @Size)-->
<!--    // and automatically validate request data in your RESTful API endpoints.-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-cache</artifactId>
      </dependency>

      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>
      <dependency>
          <groupId>org.springframework.data</groupId>
          <artifactId>spring-data-rest-hal-browser</artifactId>
          <version>3.2.3.RELEASE</version>
      </dependency>
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-hateoas</artifactId>
      </dependency>
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
      </dependency>
<!--      <dependency>-->
<!--          <groupId>org.assertj</groupId>-->
<!--          <artifactId>assertj-core</artifactId>-->
<!--      </dependency>-->
<!--      <dependency>-->
<!--          <groupId>org.springframework.boot</groupId>-->
<!--          <artifactId>spring-boot-starter-security</artifactId>-->
<!--      </dependency>-->
  </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
